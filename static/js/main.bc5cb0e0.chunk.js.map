{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","Pagination","total","perPage","currentPage","pages","useMemo","Math","ceil","useSearchParams","searchParams","className","classNames","disabled","search","page","map","pageNumber","active","length","items","App","setSearchParams","Number","get","itemsPerPage","startIndex","endIndex","visibleItems","slice","id","onChange","e","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc5cb0e0.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { useMemo } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getNumbers, getSearchWith } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  // onPageChange: React.Dispatch<React.SetStateAction<number>>,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  // onPageChange,\n}) => {\n  const pages = useMemo(() => (\n    getNumbers(1, Math.ceil(total / perPage))),\n  [total, perPage]);\n  const [searchParams] = useSearchParams();\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <Link\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          aria-disabled={currentPage === 1}\n          to={{\n            search: getSearchWith(searchParams,\n              { page: currentPage === 1 ? '1' : (currentPage - 1).toString() }),\n          }}\n        >\n          «\n        </Link>\n        {/* <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            onPageChange(prevPage => {\n              if (prevPage === 1) {\n                return 1;\n              }\n\n              return prevPage - 1;\n            });\n          }}\n        >\n          «\n        </a> */}\n      </li>\n      {pages.map(pageNumber => (\n        <li\n          className={classNames('page-item', {\n            active: currentPage === pageNumber,\n          })}\n          key={pageNumber}\n        >\n          {/* <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            onClick={() => {\n              onPageChange(pageNumber);\n              searchParams.set('page', pageNumber.toString());\n              setSearchParams(searchParams);\n            }}\n          >\n            {pageNumber}\n          </a> */}\n          <Link\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            to={{\n              search: getSearchWith(searchParams,\n                { page: pageNumber.toString() }),\n            }}\n          >\n            {pageNumber}\n          </Link>\n        </li>\n      ))}\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === pages.length,\n        })}\n      >\n        {/* <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages.length}\n          onClick={() => {\n            onPageChange(prevPage => {\n              if (prevPage === pages.length) {\n                return pages.length;\n              }\n\n              return prevPage + 1;\n            });\n          }}\n        >\n          »\n        </a> */}\n        <Link\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          aria-disabled={currentPage === pages.length}\n          to={{\n            search: getSearchWith(searchParams,\n              {\n                page: currentPage === pages.length\n                  ? pages.length.toString()\n                  : (currentPage + 1).toString(),\n              }),\n          }}\n        >\n          »\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","import React, { useMemo } from 'react';\nimport './App.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = Number(searchParams.get('page')) || 1;\n  const itemsPerPage = Number(searchParams.get('perPage')) || 5;\n  const startIndex = useMemo(() => itemsPerPage * (page - 1) + 1,\n    [itemsPerPage, page]);\n  const endIndex = useMemo(() => (itemsPerPage * page > items.length\n    ? items.length\n    : itemsPerPage * page), [itemsPerPage, page]);\n  const visibleItems = useMemo(() => items.slice(startIndex - 1, endIndex),\n    [items, startIndex, endIndex]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        { `Page ${page} (items ${startIndex} - ${endIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={itemsPerPage}\n            onChange={(e) => {\n              searchParams.set('page', '1');\n              searchParams.set('perPage', e.target.value);\n              setSearchParams(searchParams);\n            }}\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={page}\n      />\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, document.getElementById('root'),\n);\n"],"sourceRoot":""}